<script>
  $(function(){
    $("#pac-input").removeClass("hidden")
  });
</script>
<%= render 'partial/navbar' %>

<div class="container-fluid">
  <div class="row">
    <div class="col-md-6">
      <!-- Search Filter -->
      <div id="search-filter">
        <%= render 'filter' %>
      </div>
      <!-- Search Result -->
      <div id="search-result" class="row-space-top-4">
        <%= render 'list' %>
      </div>
    </div>

    <div class="col-md-6">
      <div id="map" style="height: 500px;">     
      </div>
    </div>
  </div>
</div>

<script>
  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
      center: {lat:<%= @latitude %>, lng: <%= @longitude %>},
      zoom: 13
    });
  // var card = document.getElementById('pac-card');
  var input = document.getElementById('pac-input');
  var autocomplete = new google.maps.places.Autocomplete(input);

  // Bind the map's bounds (viewport) property to the autocomplete object,
  // so that the autocomplete requests use the current map bounds for the
  // bounds option in the request.
  autocomplete.bindTo('bounds', map);

  // マーカーとインフォウィンドの配列を用意
  markers = [];
  infowindows = [];

  // 1マイル以内のリストをマーカー付けする @arrlistingsは1マイル以内の見予約リストの配列
  <% @arrlistings.each do |listing| %>

  // マーカーはこの変数の中で同じ変数
  var marker = new google.maps.Marker({
    position: new google.maps.LatLng(<%= listing.latitude %>, <%= listing.longitude %>),
    map: map
  })

  // マーカー配列にマーカを保存
  markers.push(marker);

  // マーカーがクリックされた時の処理
  marker.addListener('click', function() {

    <% if !listing.photos.blank? %>
    var content = "<div>" + '<a href="/listings/' + <%= listing.id %> +'">' + "<img src="+"<%= listing.photos[0].image.url(:thumb) %>" + " " + "style='width: 100%;height: 150px;'" +"alt='139'>" + "</a>" + '<br>' + "<h5><%= listing.listing_title %></h5>" + "<div class="+"col-md-12"+">"+"<h4>Reviews <span class="+"average_rating_listing"+"></span>"+"(<%= listing.reviews.count %>)"+"</h4></div>";

    <% end %>

    // infowindowを作成
    var infowindow = new google.maps.InfoWindow({
      content: content,
      maxWidth: 280
    });

    infowindow.open(map, this);
    infowindows.push(infowindow);

    //infowindowが完全に読み込まれた時に実行される処理
    google.maps.event.addListener(infowindow, 'domready', function() {
      $('.average_rating_listing').raty({
        path: '/assets',
        readOnly: true,
        score: <%= listing.average_star_rate %>
      });
    });
  });

  <% end %>

  // オートコンプリートが変わったときに呼び起こされる
  autocomplete.addListener('place_changed', function() {

    // 全てのinfowindowを消す
    infowindows.forEach(function(infowindow) {
      // infowindowを一個消す
      infowindow.close();
    });
    infowindows = [];

    // 全てのマーカーを消す
    markers.forEach(function(marker) {
      // マーカーを一個消す
      marker.setVisible(false);
    })
    markers = [];

    var place = autocomplete.getPlace();
    if (!place.geometry) {
      // 存在しない場所を入力してエラーが返ってきたとき
      window.alert("Autocomplete's returned place contains no geometry");
      return;
    }

    // 場所が存在するとき,マップ上にその場所を表示
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
      map.setZoom(13);  // Why 13? Because it looks good.
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(13);  // Why 13? Because it looks good.
    }

    // 入力欄の場所の緯度経度を取得
    var lat = place.geometry.location.lat();
    var lng = place.geometry.location.lng();

    var geolocation = [lat, lng];

    // 場所の住所
    var location = place.formatted_address;

    // autocompleteの入力欄が変更されたらurlも変更して履歴に残す(ページを戻すときにurlが変わらなかったら少しかっこ悪い？)
    // (例) http://localhost:3000/search?utf8=✓&search=日本、〒106-6108%20東京都港区六本木６丁目１１−１
    // formatted_address 人が読める文字列に変換された,場所のアドレス google_Map_apiをみよ！
    url = "/search?utf8=✓&search="+place.formatted_address;

    window.history.pushState(null,null,url);

    // ajaxを用いて,urlにgeolocationを渡している(pagesコントローラのajaxsearchアクションが実行される)
    $.ajax({
      url: '/ajaxsearch',
      success: function(data) {
        alert("success");
      },
      error: function(data) {
        alert('error');
      },
      data: {'geolocation': geolocation,'location': location}
    });

  });

//google map がドラッグされた時の処理 (infowindowとmarkerを再判定する)
  google.maps.event.addListener(map, 'dragend', function() {
    // すべてのinfowindowを消す
    infowindows.forEach(function(infowindow) {
      infowindow.close();
    });
    infowindows = [];

    // すべてのmarkerを消す
    markers.forEach(function(marker) {
        marker.setVisible(false);
    });
    markers = [];
    
    var pos = map.getCenter();
    var lat = pos.lat();
    var lng = pos.lng();

    var geolocation = [lat,lng];
    
    $.ajax({
      url: '/ajaxsearch',
      // this data is data for sending to url
      data: {'geolocation': geolocation}
    });

  });


}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBpiBevgO1ukttr7L8wNeBW4lIqGLaogBA&libraries=places&callback=initMap"
async defer>
</script>
